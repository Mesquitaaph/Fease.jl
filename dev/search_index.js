var documenterSearchIndex = {"docs":
[{"location":"para-comecar/para-começar-a-utilizar/#Para-começar-a-utilizar","page":"A Utilizar","title":"Para começar a utilizar","text":"","category":"section"},{"location":"para-comecar/para-começar-a-utilizar/","page":"A Utilizar","title":"A Utilizar","text":"Neste capítulo esclareceremos os passos necessários para começar a utilizar o pacote.","category":"page"},{"location":"para-comecar/para-começar-a-utilizar/#Instalando-o-pacote","page":"A Utilizar","title":"Instalando o pacote","text":"","category":"section"},{"location":"para-comecar/para-começar-a-utilizar/","page":"A Utilizar","title":"A Utilizar","text":"O pacote pode ser instalado em seu ambiente de duas formas distintas: através dos gerenciador de pacotes de Julia ou através do projeto clonado. As apresentaremos a seguir.","category":"page"},{"location":"para-comecar/para-começar-a-utilizar/#Através-do-gerenciador-de-pacotes-de-Julia","page":"A Utilizar","title":"Através do gerenciador de pacotes de Julia","text":"","category":"section"},{"location":"para-comecar/para-começar-a-utilizar/","page":"A Utilizar","title":"A Utilizar","text":"Ainda não subimos no gerenciador de pacotes.","category":"page"},{"location":"para-comecar/para-começar-a-utilizar/#Através-do-projeto-clonado","page":"A Utilizar","title":"Através do projeto clonado","text":"","category":"section"},{"location":"para-comecar/para-começar-a-utilizar/","page":"A Utilizar","title":"A Utilizar","text":"Ao iniciar o REPL da Julia, você verá escrito julia>. Para utilizar o MyProject.jl é preciso adicioná-lo ao seu ambiente. Para isso, digite ] na linha de comando para entrar no modo package. Deverá aparecer algo como (nome_do_ambiente) pkg> no lugar. Em seguida, adicione-o como um pacote de desenvolvimento digitando","category":"page"},{"location":"para-comecar/para-começar-a-utilizar/","page":"A Utilizar","title":"A Utilizar","text":"(nome_do_ambiente) pkg> dev C:\\caminho\\para\\o\\MyProject\n  Resolving package versions...","category":"page"},{"location":"para-comecar/para-começar-a-utilizar/","page":"A Utilizar","title":"A Utilizar","text":"Para verificar se o pacote está funcionando corretamente execute o comando test como apresentado abaixo.","category":"page"},{"location":"para-comecar/para-começar-a-utilizar/","page":"A Utilizar","title":"A Utilizar","text":"(nome_do_ambiente) pkg> test MyProject\n  Testing MyProject\n  Status ...","category":"page"},{"location":"para-comecar/para-começar-a-utilizar/","page":"A Utilizar","title":"A Utilizar","text":"Ao final deverá aparecer algo como","category":"page"},{"location":"para-comecar/para-começar-a-utilizar/","page":"A Utilizar","title":"A Utilizar","text":"    Testing Running tests...\nTest Summary: | Pass  Total  Time\ncaso1D.jl     |    2      2  0.6s\nTest Summary: | Pass  Total  Time\ncaso2D.jl     |    2      2  0.1s\n    Testing MyProject tests passed","category":"page"},{"location":"para-comecar/para-começar-a-utilizar/#Utilizando-o-pacote","page":"A Utilizar","title":"Utilizando o pacote","text":"","category":"section"},{"location":"para-comecar/para-começar-a-utilizar/","page":"A Utilizar","title":"A Utilizar","text":"A partir disso, é possível utilizar o MyProject incluindo o trecho abaixo no topo de seu código","category":"page"},{"location":"para-comecar/para-começar-a-utilizar/","page":"A Utilizar","title":"A Utilizar","text":"using MyProject","category":"page"},{"location":"para-comecar/para-começar-a-utilizar/","page":"A Utilizar","title":"A Utilizar","text":"O fluxo de implementação inicia definindo o conjunto de funções base. Primeiro declaramos a quantidade de elementos finitos. Em seguida, o tipo das funções base. Enfim, chamamos o método monta_base para a obtermos nossa base.","category":"page"},{"location":"para-comecar/para-começar-a-utilizar/","page":"A Utilizar","title":"A Utilizar","text":"ne = 2^3\n\nbaseType = BaseTypes.linearLagrange\nbase = monta_base(baseType, ne)","category":"page"},{"location":"para-comecar/para-começar-a-utilizar/","page":"A Utilizar","title":"A Utilizar","text":"Com a base definida, construímos a malha utilizando algumas funções já implementadas, como monta_malha_1D_uniforme. Para esta, precisamos declarar os pontos inicial e final do intervalo a b.","category":"page"},{"location":"para-comecar/para-começar-a-utilizar/","page":"A Utilizar","title":"A Utilizar","text":"a = 0\nb = 1\nmalha = monta_malha_1D_uniforme(base, ne, a, b)","category":"page"},{"location":"para-comecar/para-começar-a-utilizar/","page":"A Utilizar","title":"A Utilizar","text":"O próximo passo é definir os valores do problema. Para este tutorial, podemos utilizar valores de problemas exemplo do Caso 1D","category":"page"},{"location":"para-comecar/para-começar-a-utilizar/","page":"A Utilizar","title":"A Utilizar","text":"example = 1\nrun_values = examples_1D(example)\n\n(; α, β, f) = run_values","category":"page"},{"location":"para-comecar/para-começar-a-utilizar/","page":"A Utilizar","title":"A Utilizar","text":"Em seguida, montamos uma função que referencia o operador bilinear a(uv) com parâmetros obtidos de run_values.","category":"page"},{"location":"para-comecar/para-começar-a-utilizar/","page":"A Utilizar","title":"A Utilizar","text":"function ref_op_a(termos_equacao::TermosEquacao)\n  (; ∇u, ∇v, u, v) = termos_equacao\n\n  return β * dot(u, v) + α * dot(∇u, ∇v)\nend","category":"page"},{"location":"para-comecar/para-começar-a-utilizar/","page":"A Utilizar","title":"A Utilizar","text":"Enfim, com a f e a malha definidas e o operador a(u v) referenciado, basta resolver o sistema, digitando","category":"page"},{"location":"para-comecar/para-começar-a-utilizar/","page":"A Utilizar","title":"A Utilizar","text":"C = solve_sys(f, malha, ref_op_a)","category":"page"},{"location":"para-comecar/para-começar-a-utilizar/","page":"A Utilizar","title":"A Utilizar","text":"Obtendo o resultado","category":"page"},{"location":"para-comecar/para-começar-a-utilizar/","page":"A Utilizar","title":"A Utilizar","text":"7-element Vector{Float64}:\n 0.11108398583873315\n 0.21339432867780742\n 0.29760326069653276\n 0.3532397670750393\n 0.36802825874249573\n 0.32711327201474155\n 0.2121212287826553","category":"page"},{"location":"desenvolvimento-colaborativo/ferramentas/#Ferramentas-Sugeridas-ou-Necessárias","page":"Ferramentas","title":"Ferramentas Sugeridas ou Necessárias","text":"","category":"section"},{"location":"desenvolvimento-colaborativo/ferramentas/","page":"Ferramentas","title":"Ferramentas","text":"Aqui apresentaremos as ferramentas sugeridas ou necessárias para o desenvolvimento colaborativo deste projeto.","category":"page"},{"location":"tutoriais/novo-termo/#Novo-termo-de-Equação","page":"Novo termo de Equação","title":"Novo termo de Equação","text":"","category":"section"},{"location":"tutoriais/novo-termo/","page":"Novo termo de Equação","title":"Novo termo de Equação","text":"Esta página é uma extensão do final da explicação da Implementação Base. Se você quer uma explicação do que está sendo feito aqui, recomendamos que leia esta outra página.","category":"page"},{"location":"tutoriais/novo-termo/#Preparando-a-implementação","page":"Novo termo de Equação","title":"Preparando a implementação","text":"","category":"section"},{"location":"tutoriais/novo-termo/","page":"Novo termo de Equação","title":"Novo termo de Equação","text":"Com o código-fonte em mãos, na pasta src/testes, crie um arquivo para testarmos o que implementaremos, por exemplo, testes_novo_termo.jl. Além disso, no final do arquivo include_testes.jl, na mesma pasta, inclua o recém criado.","category":"page"},{"location":"tutoriais/novo-termo/","page":"Novo termo de Equação","title":"Novo termo de Equação","text":"include(\"testes_novo_termo.jl\")","category":"page"},{"location":"tutoriais/novo-termo/","page":"Novo termo de Equação","title":"Novo termo de Equação","text":"Em seguida, no arquivo criado, vamos implementar uma função chamada novo_termo_2D, para adicionar um novo termo de equação e testá-lo, em um espaço bidimensional. Essa função criada vai ter como base o exemplo em example/Caso2D.jl, acrescentando uma chamada de função para plotar a solução aproximada encontrada.","category":"page"},{"location":"tutoriais/novo-termo/","page":"Novo termo de Equação","title":"Novo termo de Equação","text":"function novo_termo_2D()\n  # Carrega os parâmetros de entrada da EDP\n  run_values = examples_2D(1)\n\n  # Define parâmetros da malha e monta a estrutura inicial\n  Nx1, Nx2 = 8, 8\n\n  baseType = BaseTypes.linearLagrange\n  base = monta_base(baseType, Nx1 * Nx2)\n\n  a = (0.0, 0.0)\n  b = (1.0, 1.0)\n  malha = monta_malha_2D_uniforme(base, Nx1, Nx2, a, b)\n\n  (; α, β, f) = run_values\n\n  function pseudo_a(termos_equacao::TermosEquacao)\n    (; ∇u, ∇v, u, v) = termos_equacao\n\n    return β * dot(u, v) + α * dot(∇u, ∇v)\n  end\n\n  c_geral = solve_sys(f, malha, pseudo_a)\n\n  plot_solucao_aproximada(c_geral, malha)\n\n  return\nend","category":"page"},{"location":"tutoriais/novo-termo/","page":"Novo termo de Equação","title":"Novo termo de Equação","text":"Verifique se está tudo funcionando rodando a função novo_termo_2D(). Se aparecer o gráfico plotado, como abaixo, podemos seguir com o tutorial. (Image: Solução Caso 2D)","category":"page"},{"location":"tutoriais/novo-termo/#Implementando-o-novo-termo","page":"Novo termo de Equação","title":"Implementando o novo termo","text":"","category":"section"},{"location":"tutoriais/novo-termo/","page":"Novo termo de Equação","title":"Novo termo de Equação","text":"Vá no arquivo src/examples.jl. No final do arquivo, vamos adicionar, à estrutura TermosEquacao, um termo novo para que possamos adicinar uma parcela dependente de x na equacao. Vamos chamar este novo termo de, simplesmente, x. A estrutura sairá de","category":"page"},{"location":"tutoriais/novo-termo/","page":"Novo termo de Equação","title":"Novo termo de Equação","text":"struct TermosEquacao\n  u\n  v\n  ∇u\n  ∇v\nend","category":"page"},{"location":"tutoriais/novo-termo/","page":"Novo termo de Equação","title":"Novo termo de Equação","text":"para","category":"page"},{"location":"tutoriais/novo-termo/","page":"Novo termo de Equação","title":"Novo termo de Equação","text":"struct TermosEquacao\n  u\n  v\n  ∇u\n  ∇v\n  x\nend","category":"page"},{"location":"tutoriais/novo-termo/","page":"Novo termo de Equação","title":"Novo termo de Equação","text":"Para que esse novo termo possa ser considerado nos cáculos do problema, ele deve ser referenciado na funcão montaKᵉ_geral!, especificamente no loop mais interno. A mudança é análoga à realizada em TermosEquacao, saindo de","category":"page"},{"location":"tutoriais/novo-termo/","page":"Novo termo de Equação","title":"Novo termo de Equação","text":"termos_equacao = TermosEquacao(\n  ϕᵉ_b,\n  ϕᵉ_a,\n  ∇ϕᵉ_b,\n  ∇ϕᵉ_a\n)","category":"page"},{"location":"tutoriais/novo-termo/","page":"Novo termo de Equação","title":"Novo termo de Equação","text":"para","category":"page"},{"location":"tutoriais/novo-termo/","page":"Novo termo de Equação","title":"Novo termo de Equação","text":"termos_equacao = TermosEquacao(\n  ϕᵉ_b,\n  ϕᵉ_a,\n  ∇ϕᵉ_b,\n  ∇ϕᵉ_a,\n  x\n)","category":"page"},{"location":"tutoriais/novo-termo/","page":"Novo termo de Equação","title":"Novo termo de Equação","text":"Agora basta utilizá-lo. De volta no arquivo inicial testes_novo_termo.jl, vamos alterar a definição de α e, portanto, remova sua definição original em","category":"page"},{"location":"tutoriais/novo-termo/","page":"Novo termo de Equação","title":"Novo termo de Equação","text":"(; α, β, f) = run_values","category":"page"},{"location":"tutoriais/novo-termo/","page":"Novo termo de Equação","title":"Novo termo de Equação","text":"Vamos defini-la como um função, exemplo,","category":"page"},{"location":"tutoriais/novo-termo/","page":"Novo termo de Equação","title":"Novo termo de Equação","text":"α(x₁, x₂) = x₁ + x₂","category":"page"},{"location":"tutoriais/novo-termo/","page":"Novo termo de Equação","title":"Novo termo de Equação","text":"Agora precisamos alterar como a pseudo_a funciona. Começamos acrescentando o termo x que criamos na extração dos termos da equação, alterando o trecho","category":"page"},{"location":"tutoriais/novo-termo/","page":"Novo termo de Equação","title":"Novo termo de Equação","text":"(; ∇u, ∇v, u, v) = termos_equacao","category":"page"},{"location":"tutoriais/novo-termo/","page":"Novo termo de Equação","title":"Novo termo de Equação","text":"para","category":"page"},{"location":"tutoriais/novo-termo/","page":"Novo termo de Equação","title":"Novo termo de Equação","text":"(; ∇u, ∇v, u, v, x) = termos_equacao","category":"page"},{"location":"tutoriais/novo-termo/","page":"Novo termo de Equação","title":"Novo termo de Equação","text":"Por fim, mudamos a utilização da variável para tornar-se uma chamada de função, ou seja, de","category":"page"},{"location":"tutoriais/novo-termo/","page":"Novo termo de Equação","title":"Novo termo de Equação","text":"return β * dot(u, v) + α * dot(∇u, ∇v)","category":"page"},{"location":"tutoriais/novo-termo/","page":"Novo termo de Equação","title":"Novo termo de Equação","text":"para","category":"page"},{"location":"tutoriais/novo-termo/","page":"Novo termo de Equação","title":"Novo termo de Equação","text":"return β * dot(u, v) + α(x...) * dot(∇u, ∇v)","category":"page"},{"location":"tutoriais/novo-termo/","page":"Novo termo de Equação","title":"Novo termo de Equação","text":"Aqui escolhemos passar o x junto com as reticências, pois é o padrão que utilizamos para uma função receber mais de uma variável a partir de uma tupla. Assim, a definimos esperando duas variáveis de forma que o código base não precise saber essa quantidade de variáveis.","category":"page"},{"location":"tutoriais/novo-termo/","page":"Novo termo de Equação","title":"Novo termo de Equação","text":"Ao final de todas essas alterações, a função novo_termo_2D ficará assim:","category":"page"},{"location":"tutoriais/novo-termo/","page":"Novo termo de Equação","title":"Novo termo de Equação","text":"function novo_termo_2D()\n  # Carrega os parâmetros de entrada da EDP\n  run_values = examples_2D(1)\n\n  # Define parâmetros da malha e monta a estrutura inicial\n  Nx1, Nx2 = 8, 8\n\n  baseType = BaseTypes.linearLagrange\n  base = monta_base(baseType, Nx1 * Nx2)\n\n  a = (0.0, 0.0)\n  b = (1.0, 1.0)\n  malha = monta_malha_2D_uniforme(base, Nx1, Nx2, a, b)\n\n  (; β, f) = run_values\n\n  α(x₁, x₂) = x₁ + x₂\n\n  function pseudo_a(termos_equacao::TermosEquacao)\n    (; ∇u, ∇v, u, v, x) = termos_equacao\n\n    return β * dot(u, v) + α(x...) * dot(∇u, ∇v)\n  end\n\n  c_geral = solve_sys(f, malha, pseudo_a)\n\n  plot_solucao_aproximada(c_geral, malha)\n\n  return\nend","category":"page"},{"location":"tutoriais/novo-termo/","page":"Novo termo de Equação","title":"Novo termo de Equação","text":"Verifique novamente se está tudo funcionando rodando a nova função novo_termo_2D(). Se aparecer o gráfico plotado, como abaixo, as alterações foram realizadas com sucesso! (Image: Solução Caso 2D)","category":"page"},{"location":"contatos/#Contatos","page":"Contatos","title":"Contatos","text":"","category":"section"},{"location":"contatos/","page":"Contatos","title":"Contatos","text":"Aqui colocaremos informações de contatos. Exemplos:","category":"page"},{"location":"contatos/","page":"Contatos","title":"Contatos","text":"Telegram e/ou E-mails dos colaboradores ativos e voluntários.\nUm grupo no Telegram?\nE-mail do LC³","category":"page"},{"location":"tutoriais/#Tutoriais","page":"Tutoriais","title":"Tutoriais","text":"","category":"section"},{"location":"tutoriais/","page":"Tutoriais","title":"Tutoriais","text":"Aqui apresentaremos como resolver alguns problemas com o pacote. Adicionando novo termo","category":"page"},{"location":"desenvolvimento-colaborativo/implementacao-base/#Implementação-Base","page":"Implementação Base","title":"Implementação Base","text":"","category":"section"},{"location":"desenvolvimento-colaborativo/implementacao-base/","page":"Implementação Base","title":"Implementação Base","text":"Aqui esclareceremos como foi pensada a implementação base deste projeto.","category":"page"},{"location":"desenvolvimento-colaborativo/implementacao-base/#Generalização","page":"Implementação Base","title":"Generalização","text":"","category":"section"},{"location":"desenvolvimento-colaborativo/implementacao-base/#Estruturas","page":"Implementação Base","title":"Estruturas","text":"","category":"section"},{"location":"desenvolvimento-colaborativo/implementacao-base/","page":"Implementação Base","title":"Implementação Base","text":"No código existem estruturas e tipos que são essenciais para seu funcionamento e entendimento.","category":"page"},{"location":"desenvolvimento-colaborativo/implementacao-base/#Mesh","page":"Implementação Base","title":"Mesh","text":"","category":"section"},{"location":"desenvolvimento-colaborativo/implementacao-base/","page":"Implementação Base","title":"Implementação Base","text":"Aqui se encontram valores que definem uma malha. Nela se encontram, por exemplo, o número de subdivisões para cada eixo, número de elementos totais, as coordenadas de cada um dos nós, sua dimensão, a matriz LG, o vetor EQ, entre outros.","category":"page"},{"location":"desenvolvimento-colaborativo/implementacao-base/","page":"Implementação Base","title":"Implementação Base","text":"Existem funções para montagens específicas de malha. Um exemplo é a assemble_uniform_mesh_1D que retorna uma variável do tipo Mesh para um intervalo uniforme discreto dentro de a b ab.","category":"page"},{"location":"desenvolvimento-colaborativo/implementacao-base/","page":"Implementação Base","title":"Implementação Base","text":"Manter todos esses valores agrupados, torna-os facilmente acessíveis.","category":"page"},{"location":"desenvolvimento-colaborativo/implementacao-base/#RunValues","page":"Implementação Base","title":"RunValues","text":"","category":"section"},{"location":"desenvolvimento-colaborativo/implementacao-base/","page":"Implementação Base","title":"Implementação Base","text":"Essa estrutura é utilizada para agrupar valores normalmente utilizados nos problemas, ou seja, parâmetros, coeficientes, a f e a solução u esperada. É o que retorna quando se chama funções \"exemplos\", localizadas em examples.jl. Seu uso é opcional, recomendado para montar esses exemplos prontos.","category":"page"},{"location":"desenvolvimento-colaborativo/implementacao-base/#EquationTerms","page":"Implementação Base","title":"EquationTerms","text":"","category":"section"},{"location":"desenvolvimento-colaborativo/implementacao-base/","page":"Implementação Base","title":"Implementação Base","text":"Para determinar os termos a serem utilizados no operador bilinear a(uv), é necessário o EquationTerms. É uma forma de indicar como u, v, nabla u, nabla v... são aplicados em a(u v).","category":"page"},{"location":"desenvolvimento-colaborativo/implementacao-base/#Montando-operador-a(u,-v)-e-aplicando-o-na-montagem-do-sistema-linear","page":"Implementação Base","title":"Montando operador a(u v) e aplicando-o na montagem do sistema linear","text":"","category":"section"},{"location":"desenvolvimento-colaborativo/implementacao-base/","page":"Implementação Base","title":"Implementação Base","text":"O operador pode se encontrar, por exemplo, na seguinte forma:","category":"page"},{"location":"desenvolvimento-colaborativo/implementacao-base/","page":"Implementação Base","title":"Implementação Base","text":"a(u v) = beta int u(x)cdot v(x)dOmega  + alpha int nablau(x)cdot nablav(x) dOmega","category":"page"},{"location":"desenvolvimento-colaborativo/implementacao-base/","page":"Implementação Base","title":"Implementação Base","text":"No entanto, o que utilizamos é uma forma sem a integração, ou seja, um pseudo operador, por exemplo, pseudo_a(u,v) = β * dot(u, v) + α * dot(∇u, ∇v). Nesse caso, α e β são constantes escolhidas arbitrariamente, mas u, v, ∇u e ∇v são referenciadas diretamente de EquationTerms.","category":"page"},{"location":"desenvolvimento-colaborativo/implementacao-base/","page":"Implementação Base","title":"Implementação Base","text":"Então, a função que utilizamos para definir esse pseudo operador, na verdade, é:","category":"page"},{"location":"desenvolvimento-colaborativo/implementacao-base/","page":"Implementação Base","title":"Implementação Base","text":"function pseudo_a(equation_terms::EquationTerms)\n  (; ∇u, ∇v, u, v) = equation_terms\n\n  return β * dot(u, v) + α * dot(∇u, ∇v)\nend","category":"page"},{"location":"desenvolvimento-colaborativo/implementacao-base/","page":"Implementação Base","title":"Implementação Base","text":"O argumento equation_terms contém todos os termos possíveis de serem utilizados e pegamos apenas os que queremos em (; ∇u, ∇v, u, v) = equation_terms. Essa nomenclatura (; var1, var2, var3,...) no lado esquerdo da atribuição permite extrair os campos de EquationTerms através de seus nomes, sem precisar de uma ordem específica. Se quisermos um outro, por exemplo, x, podemos digitar (; ∇u, ∇v, u, x, v) = equation_terms.","category":"page"},{"location":"desenvolvimento-colaborativo/implementacao-base/","page":"Implementação Base","title":"Implementação Base","text":"Já o retorno da função é o que será aplicado na montagem das K locais do problema aproximado. Temos que uma entrada da matriz K^e local é","category":"page"},{"location":"desenvolvimento-colaborativo/implementacao-base/","page":"Implementação Base","title":"Implementação Base","text":"K^e_ab = int alpha nablavarphi^e_b(x(xi)) cdot nablavarphi^e_a(x(xi)) + beta varphi^e_b(x(xi)) cdot varphi^e_a(x(xi)) J(xi)dxi_1dxi_2","category":"page"},{"location":"desenvolvimento-colaborativo/implementacao-base/","page":"Implementação Base","title":"Implementação Base","text":"Essa integração é feita com a Quadratura Gaussiana, assim, para cada ponto de gauss i, temos a expressão","category":"page"},{"location":"desenvolvimento-colaborativo/implementacao-base/","page":"Implementação Base","title":"Implementação Base","text":"w_i(alpha nablavarphi^e_b(x(xi)) cdot nablavarphi^e_a(x(xi)) + beta varphi^e_b(x(xi)) cdot varphi^e_a(x(xi)))J(xi)","category":"page"},{"location":"desenvolvimento-colaborativo/implementacao-base/","page":"Implementação Base","title":"Implementação Base","text":"Portanto, se substituirmos nablavarphi^e_b(x(xi)) por ∇u, nablavarphi^e_a(x(xi)) por ∇v, varphi^e_b(x(xi)) por u e varphi^e_b(x(xi)) por v, temos wᵢ*(α*∇u⋅∇v + β*u⋅v)|J(ξ)|. Ou seja, a expressão entre parênteses é examente o que a função pseudo_a retorna.","category":"page"},{"location":"desenvolvimento-colaborativo/implementacao-base/","page":"Implementação Base","title":"Implementação Base","text":"Isso na montagem da K local é feito com o trecho de código a seguir","category":"page"},{"location":"desenvolvimento-colaborativo/implementacao-base/","page":"Implementação Base","title":"Implementação Base","text":"  equation_terms = EquationTerms(\n    ϕᵉ_b,\n    ϕᵉ_a,\n    ∇ϕᵉ_b,\n    ∇ϕᵉ_a\n  )\n  sum = pseudo_a(equation_terms)\n  \"sum = β * dot(ϕᵉ_b, ϕᵉ_a) + α * dot(∇ϕᵉ_b, ∇ϕᵉ_a)\"\n\n  Kᵉ[a, b] += wᵢ * sum * detJ","category":"page"},{"location":"desenvolvimento-colaborativo/implementacao-base/","page":"Implementação Base","title":"Implementação Base","text":"Assim, é possível definir uma referência ao operador a(u v), com os termos apresentados, sem precisar mexer no código da montagem da K local.","category":"page"},{"location":"desenvolvimento-colaborativo/implementacao-base/#Adicionando-um-novo-termo","page":"Implementação Base","title":"Adicionando um novo termo","text":"","category":"section"},{"location":"desenvolvimento-colaborativo/implementacao-base/","page":"Implementação Base","title":"Implementação Base","text":"Adicionar um novo termo vem da ideia de tornar flexível a implementação de novos problemas. Necessariamente tem que ser calculado e obtido dentro da montagem da K local, assim como ∇ϕᵉ_b, por exemplo. Um exemplo pronto de como incluir um termo novo se encontra no tutorial","category":"page"},{"location":"reference/#Referências","page":"Referencias","title":"Referências","text":"","category":"section"},{"location":"reference/#Conteúdo","page":"Referencias","title":"Conteúdo","text":"","category":"section"},{"location":"reference/","page":"Referencias","title":"Referencias","text":"Pages = [\"reference.md\"]","category":"page"},{"location":"reference/#Índice","page":"Referencias","title":"Índice","text":"","category":"section"},{"location":"reference/","page":"Referencias","title":"Referencias","text":"Pages = [\"reference.md\"]","category":"page"},{"location":"reference/#Fease.Malha","page":"Referencias","title":"Fease.Malha","text":"struct Mesh\n\nValores que definem uma malha.\n\nCampos\n\nbase::Base: Informações sobre o tipo da base de funções interpoladoras\nne::Int64: Número de elementos totais\nneq::Int64: Número de equações\ncoords::Tuple: N-upla com as coordenadas (X₁, X₂, Xᵢ...) dos nós da malha\ndx: n-upla contendo o intervalo entre os nós, para cada eixo (se uniforme)\nEQ: Vetor com as reenumerações das funções globais ϕ\nLG: Matriz de conectividade local/global (LG). Relaciona a numeração local e global das funções ϕ\nEQoLG::Matrix{Int64}: Matriz composta entre a EQ e a LG\na: Coordenada do início do intervalo uniforme\nb: Coordenada do final do intervalo uniforme\nn_dim: Número de dimensões da malha\nNx: Número de subdivisões da malha para cada eixo\n\n\n\n\n\n","category":"type"},{"location":"reference/#Fease.elem_coords-Tuple{Malha, Int64}","page":"Referencias","title":"Fease.elem_coords","text":"elem_coords(malha::Malha, e::Int)\n\nDescrição.\n\nParâmetros\n\nmalha::Malha: \ne::Int: \n\nRetorno\n\neqs_idx::: EQoLG para o elemento e passado como parâmetro\nXᵉ::: \n\nExemplo\n\n\n\n\n\n\n\n","category":"method"},{"location":"reference/#Fease.montaF_geral-Tuple{Function, Malha}","page":"Referencias","title":"Fease.montaF_geral","text":"montaF_geral(run_values::RunValues, malha::Malha)\n\nDescrição.\n\nParâmetros\n\nrun_values::RunValues:\nmalha::Malha:\n\nRetorno\n\nF::Vector{Float64}:\n\nExemplo\n\n\n\n\n\n\n\n","category":"method"},{"location":"reference/#Fease.montaFᵉ_geral!-NTuple{8, Any}","page":"Referencias","title":"Fease.montaFᵉ_geral!","text":"montaFᵉ_geral!(Fᵉ, f, Xᵉ, P, W, ϕξ, ∇ϕξ, n_dim)\n\nDescrição.\n\nParâmetros\n\nFᵉ::: \nf::: \nXᵉ::: \nP::: \nW::: \nϕξ::: \n∇ϕξ::: \nn_dim::: \n\nRetorno\n\nAltera Fᵉ.\n\nExemplo\n\n\n\n\n\n\n\n","category":"method"},{"location":"reference/#Fease.montaK_geral-Tuple{Malha, Any}","page":"Referencias","title":"Fease.montaK_geral","text":"montaK_geral(run_values::RunValues, malha::Malha)\n\nDescrição.\n\nParâmetros\n\nrun_values::RunValues:\nmalha::Malha:\n\nRetorno\n\nK::Matrix{Float64}:\n\nExemplo\n\n\n\n\n\n\n\n","category":"method"},{"location":"reference/#Fease.montaKᵉ_geral!-NTuple{8, Any}","page":"Referencias","title":"Fease.montaKᵉ_geral!","text":"montaKᵉ_geral!(Kᵉ, Xᵉ, P, W, Φξ, ∇Φξ, n_dim, pseudo_a)\n\nDescrição.\n\nParâmetros\n\nKᵉ::: \nXᵉ::: \nP::: \nW::: \nΦξ::: \n∇Φξ::: \nn_dim::: \npseudo_a: \n\nRetorno\n\nAltera Kᵉ.\n\nExemplo\n\n\n\n\n\n\n\n","category":"method"},{"location":"reference/#Fease.monta_malha_2D_foco","page":"Referencias","title":"Fease.monta_malha_2D_foco","text":"monta_malha_2D_foco(\nbaseType, Nx1, Nx2, a::Tuple, b::Tuple, ponto_foco::Tuple, precisao::Int64)::Malha\n\nFunção que constrói uma malha 2D que cria mais elementos próximos a um ponto especificado.\n\nParâmetros\n\nbaseType::: \nNx1::: \nNx2::: \na::Tuple: \nb::Tuple: \nponto_foco::Tuple: \n\nRetorno\n\nExemplo\n\n\n\n\n\n\n\n","category":"function"},{"location":"reference/#Fease.mudanca_variavel_xξ-Tuple{Any, Any, Any}","page":"Referencias","title":"Fease.mudanca_variavel_xξ","text":"mudanca_variavel_xξ(Xᵉ, Φξ, n_dim)\n\nDescrição.\n\nParâmetros\n\nXᵉ::: \nΦξ::: \nn_dim::Int: Número de dimensões do espaço.\n\nRetorno\n\nx::: \n\nExemplo\n\n\n\n\n\n\n\n","category":"method"},{"location":"reference/#Fease.quadratura_gauss-Tuple{Int64, Int64}","page":"Referencias","title":"Fease.quadratura_gauss","text":"quadratura_gauss(npg::Int, n_dim::Int)\n\nDefine os npg pontos de Gauss-Legendre P e os pesos associados W.  Cada um dos pontos em P são n-uplas dimensionadas por n_dim. Os pesos associados W funcionam analogamente.\n\nParâmetros\n\nnpg::Int: Número de pontos de integração de Gauss-Legendre.\nn_dim::Int: Número de dimensões do espaço. Tamanho dos pontos de Gauss-Legendre.\n\nRetorno\n\nP::Vector{Tuple}: Vetor de n-uplas, onde cada n-upla é um ponto de Gauss-Legendre dimensionado por n_dim.\nW::Vector{Tuple}: Vetor de n-uplas, onde cada n-upla é um conjunto ordenado de pesos de Gauss-Legendre associados a cada um dos pontos em P.\n\nExemplo\n\n\n\n\n\n\n\n","category":"method"},{"location":"reference/#Fease.quadratura_ϕ-Tuple{Any, Int64, Int64}","page":"Referencias","title":"Fease.quadratura_ϕ","text":"quadratura_ϕ(base, npg::Int, n_dim::Int)\n\nAvalia cada uma das funções ϕ em cada um dos npg pontos de Gauss-Legendre e armazena o resultado em uma matriz ϕP: npg x n_funcs.\n\nParâmetros\n\nn_funcs::Int: Número de funções base.\nnpg::Int: Número de pontos de integração de Gauss-Legendre.\nn_dim::Int: Número de dimensões do espaço. Tamanho dos pontos de Gauss-Legendre.\n\nRetorno\n\nϕP::Matrix{Float64}: Matriz npg x n_funcs com a avaliaçao das ϕ nos pontos de Gauss-Legendre.\nP::Vector{Tuple}: Vetor de n-uplas, onde cada n-upla é um ponto de Gauss-Legendre dimensionado por n_dim.\nW::Vector{Tuple}: Vetor de n-uplas, onde cada n-upla é um conjunto ordenado de pesos de Gauss-Legendre associados a cada um dos pontos em P.\n\nExemplo\n\n\n\n\n\n\n\n","category":"method"},{"location":"reference/#Fease.quadratura_∇ϕ-Tuple{Any, Int64, Int64}","page":"Referencias","title":"Fease.quadratura_∇ϕ","text":"quadratura_∇ϕ(base, npg::Int, n_dim::Int)\n\nAvalia cada uma das funções ∂ϕ, para cada uma das n_dim dimensões, em cada um dos npg pontos de Gauss-Legendre e  armazena o resultado em uma n-upla ∇ϕP de matrizes ∂ϕP: npg x n_funcs.\n\nParâmetros\n\nn_funcs::Int: Número de funções base.\nnpg::Int: Número de pontos de integração de Gauss-Legendre.\nn_dim::Int: Número de dimensões do espaço. Tamanho dos pontos de Gauss-Legendre.\n\nRetorno\n\n∇ϕP::Tuple{Matrix{Float64}}: N-upla de matrizes npg x n_funcs com a avaliaçao das ∂ϕ nos pontos de Gauss-Legendre.\nP::Vector{Tuple}: Vetor de n-uplas, onde cada n-upla é um ponto de Gauss-Legendre dimensionado por n_dim.\nW::Vector{Tuple}: Vetor de n-uplas, onde cada n-upla é um conjunto ordenado de pesos de Gauss-Legendre associados a cada um dos pontos em P.\n\nExemplo\n\n\n\n\n\n\n\n","category":"method"},{"location":"reference/#Fease.solveSys_geral-Tuple{RunValues, Malha}","page":"Referencias","title":"Fease.solveSys_geral","text":"solveSys_geral(run_values::RunValues, malha::Malha)\n\nMonta e soluciona o sistema linear KC = F.\n\nParâmetros\n\nrun_values::RunValues:\nmalha::Malha:\n\nRetorno\n\nC::Vector{Float64}:\n\nExemplo\n\n\n\n\n\n\n\n","category":"method"},{"location":"para-comecar/para-começar-a-desenvolver/#Para-começar-a-desenvolver","page":"A Desenvolver","title":"Para começar a desenvolver","text":"","category":"section"},{"location":"para-comecar/para-começar-a-desenvolver/","page":"A Desenvolver","title":"A Desenvolver","text":"Neste capítulo esclareceremos os passos necessários para começar a desenvolver e contribuir com o pacote.","category":"page"},{"location":"para-comecar/para-começar-a-desenvolver/#Clonando-o-projeto","page":"A Desenvolver","title":"Clonando o projeto","text":"","category":"section"},{"location":"para-comecar/para-começar-a-desenvolver/","page":"A Desenvolver","title":"A Desenvolver","text":"Em um terminal com o diretório de trabalho em uma pasta de sua escolha, execute os comandos abaixo (Windows ou Linux)","category":"page"},{"location":"para-comecar/para-começar-a-desenvolver/","page":"A Desenvolver","title":"A Desenvolver","text":"git clone https://github.com/Mesquitaaph/Fease.jl.git\ncd Fease","category":"page"},{"location":"para-comecar/para-começar-a-desenvolver/","page":"A Desenvolver","title":"A Desenvolver","text":"Em seguida, você pode abrir o projeto com o VSCode com mais um comando","category":"page"},{"location":"para-comecar/para-começar-a-desenvolver/","page":"A Desenvolver","title":"A Desenvolver","text":"code .","category":"page"},{"location":"para-comecar/para-começar-a-desenvolver/#Durante-o-desenvolvimento...-(Essa-parte-talvez-entre-nas-diretrizes-de-dev-colab)","page":"A Desenvolver","title":"Durante o desenvolvimento... (Essa parte talvez entre nas diretrizes de dev colab)","text":"","category":"section"},{"location":"para-comecar/para-começar-a-desenvolver/","page":"A Desenvolver","title":"A Desenvolver","text":"Acredito que a melhor forma de testar uma nova implementação seria incluindo um novo arquivo com exemplo de como utilizá-la, na pasta exemplos, na raíz do projeto. Inicialmente existem dois arquivos: caso1D.jl e caso2D.jl, cada um com um exemplo distinto.","category":"page"},{"location":"para-comecar/para-começar-a-desenvolver/#Desenvolvendo-com-VSCode","page":"A Desenvolver","title":"Desenvolvendo com VSCode","text":"","category":"section"},{"location":"para-comecar/para-começar-a-desenvolver/","page":"A Desenvolver","title":"A Desenvolver","text":"Recomendamos que seja instalada a extensão de Julia em sua instalação do VSCode. Com o auxílio deste passo a passo , pesquise por julialang.language-julia e clique em \"instalar\".","category":"page"},{"location":"para-comecar/para-começar-a-desenvolver/","page":"A Desenvolver","title":"A Desenvolver","text":"Agora você deve iniciar o REPL de Julia. Com um arquivo .jl do projeto, pode fazer isso apertando as teclas Ctrl+Shift+P e digitar Start REPL.","category":"page"},{"location":"para-comecar/para-começar-a-desenvolver/","page":"A Desenvolver","title":"A Desenvolver","text":"Ao iniciar o REPL da Julia, você verá escrito julia> no terminal integrado do VSCode. Para testar o Fease.jl digite ] na linha de comando para entrar no modo package. Deverá aparecer (Fease) pkg> no lugar. Para verificar se o pacote está funcionando corretamente execute o comando test como apresentado abaixo.","category":"page"},{"location":"para-comecar/para-começar-a-desenvolver/","page":"A Desenvolver","title":"A Desenvolver","text":"(Fease) pkg> test Fease\n  Testing Fease\n  Status ...","category":"page"},{"location":"para-comecar/para-começar-a-desenvolver/","page":"A Desenvolver","title":"A Desenvolver","text":"Ao final deverá aparecer algo como","category":"page"},{"location":"para-comecar/para-começar-a-desenvolver/","page":"A Desenvolver","title":"A Desenvolver","text":"    Testing Running tests...\nTest Summary: | Pass  Total  Time\ncaso1D.jl     |    2      2  0.6s\nTest Summary: | Pass  Total  Time\ncaso2D.jl     |    2      2  0.1s\n    Testing Fease tests passed","category":"page"},{"location":"para-comecar/para-começar-a-desenvolver/#Instalando-e-configurando-o-Revise.jl","page":"A Desenvolver","title":"Instalando e configurando o Revise.jl","text":"","category":"section"},{"location":"para-comecar/para-começar-a-desenvolver/","page":"A Desenvolver","title":"A Desenvolver","text":"O Revise.jl é um pacote a ser instalado globamente que auxilia no desenvolvimento de pacotes Julia. Ele atualiza o pacote local automaticamente ao salvar o arquivo. Isso reduz a quantidadade de vezes que precisamos reiniciar o ambiente/REPL.","category":"page"},{"location":"para-comecar/para-começar-a-desenvolver/","page":"A Desenvolver","title":"A Desenvolver","text":"Ainda com o terminal integrado do VSCode aberto, entre no modo package e digite activate:","category":"page"},{"location":"para-comecar/para-começar-a-desenvolver/","page":"A Desenvolver","title":"A Desenvolver","text":"(Fease) pkg> activate","category":"page"},{"location":"para-comecar/para-começar-a-desenvolver/","page":"A Desenvolver","title":"A Desenvolver","text":"Deverá mudar de (Fease) pkg> para (@v1.11) pkg> (ou para a versão de Julia que estiver instalada em sua máquina). Com isso, prossiga:","category":"page"},{"location":"para-comecar/para-começar-a-desenvolver/","page":"A Desenvolver","title":"A Desenvolver","text":"(@v1.11) pkg> add Revise","category":"page"},{"location":"para-comecar/para-começar-a-desenvolver/","page":"A Desenvolver","title":"A Desenvolver","text":"Adicionando-o com sucesso, o Revise.jl estará instalado globalmente.","category":"page"},{"location":"para-comecar/para-começar-a-desenvolver/","page":"A Desenvolver","title":"A Desenvolver","text":"Para configurá-lo, abra um outro terminal do seu sistema operacional e execute:","category":"page"},{"location":"para-comecar/para-começar-a-desenvolver/","page":"A Desenvolver","title":"A Desenvolver","text":"Terminal do Linux","category":"page"},{"location":"para-comecar/para-começar-a-desenvolver/","page":"A Desenvolver","title":"A Desenvolver","text":"mkdir -p ~/.julia/config/ && echo \"using Revise\" >> ~/.julia/config/startup.jl","category":"page"},{"location":"para-comecar/para-começar-a-desenvolver/","page":"A Desenvolver","title":"A Desenvolver","text":"Cmd do Windows","category":"page"},{"location":"para-comecar/para-começar-a-desenvolver/","page":"A Desenvolver","title":"A Desenvolver","text":"mkdir %userprofile%\\.julia\\config && echo using Revise >> %userprofile%\\.julia\\config\\startup.jl","category":"page"},{"location":"para-comecar/para-começar-a-desenvolver/","page":"A Desenvolver","title":"A Desenvolver","text":"Agora reabra o VSCode e inicie o REPL. Execute:","category":"page"},{"location":"para-comecar/para-começar-a-desenvolver/","page":"A Desenvolver","title":"A Desenvolver","text":"julia> using Fease","category":"page"},{"location":"para-comecar/para-começar-a-desenvolver/#Testando-mudanças-no-pacote","page":"A Desenvolver","title":"Testando mudanças no pacote","text":"","category":"section"},{"location":"para-comecar/para-começar-a-desenvolver/","page":"A Desenvolver","title":"A Desenvolver","text":"Na raíz do projeto, dentro da pasta src/testes, crie um arquivo Julia, por exemplo teste.jl e inclua-o no arquivo include_testes.jl digitando, ao final do arquivo:","category":"page"},{"location":"para-comecar/para-começar-a-desenvolver/","page":"A Desenvolver","title":"A Desenvolver","text":"include(\"teste.jl\")","category":"page"},{"location":"para-comecar/para-começar-a-desenvolver/","page":"A Desenvolver","title":"A Desenvolver","text":"De volta ao arquivo criado, digite:","category":"page"},{"location":"para-comecar/para-começar-a-desenvolver/","page":"A Desenvolver","title":"A Desenvolver","text":"test_revise()","category":"page"},{"location":"para-comecar/para-começar-a-desenvolver/","page":"A Desenvolver","title":"A Desenvolver","text":"Para executar essa função clique no botão de play no canto superior direito da janela do VSCode para executar o arquivo inteiro ou clicando na linha com o trecho do código e apertando no teclado Ctrl+Enter. O resultado será apresentado no terminal, rodando a função com a primeira opção, ou na linha, com a segunda opção. Deverá aparecer true.","category":"page"},{"location":"para-comecar/para-começar-a-desenvolver/","page":"A Desenvolver","title":"A Desenvolver","text":"Agora segure a tecla Ctrl e clique na função test_revise. Este atalho abrirá o arquivo utils.jl, onde encontra sua definição, na linha certa. Troque seu retorno de true para false:","category":"page"},{"location":"para-comecar/para-começar-a-desenvolver/","page":"A Desenvolver","title":"A Desenvolver","text":"function test_revise()\n  return false\nend","category":"page"},{"location":"para-comecar/para-começar-a-desenvolver/","page":"A Desenvolver","title":"A Desenvolver","text":"Volte ao arquivo teste.jl e execute novamente a função. Se desta vez aparecer false, o Revise está funcionando e, assim, seu ambiente estará configurado e pronto para você desenvolver!","category":"page"},{"location":"desenvolvimento-colaborativo/diretrizes-desenvolvimento/#Diretrizes-para-o-Desenvolvimento-Colaborativo","page":"Diretrizes de Desenvolvimento","title":"Diretrizes para o Desenvolvimento Colaborativo","text":"","category":"section"},{"location":"desenvolvimento-colaborativo/diretrizes-desenvolvimento/","page":"Diretrizes de Desenvolvimento","title":"Diretrizes de Desenvolvimento","text":"Aqui apresentaremos o que deve ser seguido durante a implementação de novas funcionalidades, melhorias ou correções com o objetivo de manter o projeto sustentável e escalável, englobando desenvolvedores com experiências de programação em diferentes níveis.","category":"page"},{"location":"desenvolvimento-colaborativo/diretrizes-desenvolvimento/#Durante-o-desenvolvimento...","page":"Diretrizes de Desenvolvimento","title":"Durante o desenvolvimento...","text":"","category":"section"},{"location":"desenvolvimento-colaborativo/diretrizes-desenvolvimento/","page":"Diretrizes de Desenvolvimento","title":"Diretrizes de Desenvolvimento","text":"A melhor forma de testar uma nova implementação é incluindo um novo arquivo na pasta src/testes, como apresentado em Para Começar a Desenvolver.","category":"page"},{"location":"desenvolvimento-colaborativo/diretrizes-desenvolvimento/","page":"Diretrizes de Desenvolvimento","title":"Diretrizes de Desenvolvimento","text":"Uma vez finalizada, se sua implementação incluir algo novo, que seja necessário um tutorial, como por exemplo, um problema que não existe, deve-se incluir um exemplo base na pasta example na raíz do projeto. Inicialmente existem dois arquivos: caso1D.jl e caso2D.jl, cada um com um exemplo distinto.","category":"page"},{"location":"desenvolvimento-colaborativo/diretrizes-desenvolvimento/#Legibilidade","page":"Diretrizes de Desenvolvimento","title":"Legibilidade","text":"","category":"section"},{"location":"desenvolvimento-colaborativo/diretrizes-desenvolvimento/","page":"Diretrizes de Desenvolvimento","title":"Diretrizes de Desenvolvimento","text":"A legibilidade do código é definida por alguns pontos:","category":"page"},{"location":"desenvolvimento-colaborativo/diretrizes-desenvolvimento/#Idioma-do-código","page":"Diretrizes de Desenvolvimento","title":"Idioma do código","text":"","category":"section"},{"location":"desenvolvimento-colaborativo/diretrizes-desenvolvimento/","page":"Diretrizes de Desenvolvimento","title":"Diretrizes de Desenvolvimento","text":"Apesar da documentação ser escrita em português, nosso código deve ser escrito em inglês.","category":"page"},{"location":"desenvolvimento-colaborativo/diretrizes-desenvolvimento/#Práticas-de-Escrita-Convenção-de-Nomenclatura","page":"Diretrizes de Desenvolvimento","title":"Práticas de Escrita - Convenção de Nomenclatura","text":"","category":"section"},{"location":"desenvolvimento-colaborativo/diretrizes-desenvolvimento/","page":"Diretrizes de Desenvolvimento","title":"Diretrizes de Desenvolvimento","text":"Deve-se utilizar snake_case para nome de funções e variáveis, por exemplo, test_revise e CamelCase para tipos implementados e arquivos, por exemplo, EquationTerms.","category":"page"},{"location":"desenvolvimento-colaborativo/diretrizes-desenvolvimento/#Nomes-de-funções,-variáveis,-tipos-e-nomes-de-arquivo","page":"Diretrizes de Desenvolvimento","title":"Nomes de funções, variáveis, tipos e nomes de arquivo","text":"","category":"section"},{"location":"desenvolvimento-colaborativo/diretrizes-desenvolvimento/","page":"Diretrizes de Desenvolvimento","title":"Diretrizes de Desenvolvimento","text":"Funções e variáveis devem ser nomeadas de forma clara e descritiva, facilitando a leitura e compreensão de quem vai trabalhar com sua implementação. Sempre que possível use palavras inteiras. Por exemplo: escrevi uma função que monta e retorna uma malha 2D. Nomearei-a como assemble_mesh_2D.","category":"page"},{"location":"desenvolvimento-colaborativo/diretrizes-desenvolvimento/#Identação,-espaçamento-e-outras-definições-de-escrita","page":"Diretrizes de Desenvolvimento","title":"Identação, espaçamento e outras definições de escrita","text":"","category":"section"},{"location":"desenvolvimento-colaborativo/diretrizes-desenvolvimento/","page":"Diretrizes de Desenvolvimento","title":"Diretrizes de Desenvolvimento","text":"Essas outras escolhas de estilo de escrita são aplicadas automaticamente pelo formatter configurado no projeto. No VSCode, todos os arquivos são auto-formatados ao salvar, não sendo necessário se preocupar com isso.","category":"page"},{"location":"desenvolvimento-colaborativo/diretrizes-desenvolvimento/","page":"Diretrizes de Desenvolvimento","title":"Diretrizes de Desenvolvimento","text":"Caso não esteja utilizando o VSCode, deve-se executar","category":"page"},{"location":"desenvolvimento-colaborativo/diretrizes-desenvolvimento/","page":"Diretrizes de Desenvolvimento","title":"Diretrizes de Desenvolvimento","text":"julia> using Fease\njulia> format(\".\")","category":"page"},{"location":"desenvolvimento-colaborativo/diretrizes-desenvolvimento/","page":"Diretrizes de Desenvolvimento","title":"Diretrizes de Desenvolvimento","text":"para formatar todos os arquivos modificados.","category":"page"},{"location":"metodo-elementos-finitos/#Método-de-Elementos-Finitos","page":"Método de Elementos Finitos","title":"Método de Elementos Finitos","text":"","category":"section"},{"location":"metodo-elementos-finitos/","page":"Método de Elementos Finitos","title":"Método de Elementos Finitos","text":"Aqui apresentaremos a Introdução ao Método de Elementos Finitos. Talvez mais.","category":"page"},{"location":"#Nome-do-Projeto","page":"Início","title":"Nome do Projeto","text":"","category":"section"},{"location":"","page":"Início","title":"Início","text":"Descrição breve do projeto.","category":"page"},{"location":"#Introdução","page":"Início","title":"Introdução","text":"","category":"section"},{"location":"#Caminho-do-Usuário","page":"Início","title":"Caminho do Usuário","text":"","category":"section"},{"location":"","page":"Início","title":"Início","text":"Seguir o passo-a-passo em Para Começar a Utilizar.","category":"page"},{"location":"","page":"Início","title":"Início","text":"Por enquanto só o passo 1 basta. Abaixo são os possíveis próximos passos.","category":"page"},{"location":"","page":"Início","title":"Início","text":"Ler o Método de Elementos Finitos\nLer um dos Tutoriais.","category":"page"},{"location":"#Caminho-do-Desenvolvedor","page":"Início","title":"Caminho do Desenvolvedor","text":"","category":"section"},{"location":"","page":"Início","title":"Início","text":"Seguir o passo-a-passo em Para Começar a Desenvolver.\nLer o Método de Elementos Finitos.\nLer um dos Tutoriais.\nLer as Diretrizes de Desenvolvimento Colaborativo e a apresentação da Implementação Base.","category":"page"}]
}
